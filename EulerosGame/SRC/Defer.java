package Euleros;

import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataOutputStream;
import java.io.DataInputStream;
import javax.microedition.rms.*;


public class Defer {


  public Defer()  {
    int maxGames = 100;
    String DD;
      try{
       RecordStore rs = null;
       rs = RecordStore.openRecordStore("Pt2",true);
       //    Risolti o meno gli schemi.
       DD = "S01";                   // S per sound 01 = livello 1  se 00 livello 100
       for (int i=1; i<=maxGames; i++) { DD = DD+"0";};
       rs.addRecord(DD.getBytes(),0,DD.length());
       for (int i=1; i<=maxGames; i++) { DD = DammiDD(i); rs.addRecord(DD.getBytes(),0,DD.length()); };
       for (int i=1; i<=maxGames; i++) { DD = DammiDD(i); rs.addRecord(DD.getBytes(),0,DD.length()); };

       rs.closeRecordStore();
      }   catch ( Exception e2){}
  }


    private String   DammiDD(int ii){
     String D1= "";
         switch (ii) {
          case 1 :  D1 = "020607490000000501780000600000438000903500000000000010060804000000000960000010007"; break;
          case 2 :  D1 = "002030570000008003108200000000005000000000000360070020007800300080049700091000000"; break;
          case 3 :  D1 = "000070090004080605000930000049050010681000000000002000930000000050003100700506003"; break;
          case 4 :  D1 = "000000060004000953970000800006080030008050002200340000010500300080760000000000041"; break;
          case 5 :  D1 = "020000090000810000013500600800005024200049010000000903000008050065400000000600001"; break;
          case 6 :  D1 = "001300090000000008007002040004020005600004000300900007720890010000000900000017006"; break;
          case 7 :  D1 = "095200000600000901000003040000905400062000083000000000030807000000000006500001307"; break;
          case 8 :  D1 = "069800012500000000000000600000007900000060701028010000900004370005100090000080000"; break;
          case 9 :  D1 = "037009000000010000040700002002000900810300000000090058004250791000000040000040300"; break;
          case 10:  D1 = "000300400050078060000000072030005007620000900080000100800000600070006000300040001"; break;
          case 11:  D1 = "000640238400000600007000010004000070570020000000090400030008000900300100000005060"; break;
          case 12:  D1 = "000000098000000300280107000090806000307000060100049050000078006005410000070000034"; break;
          case 13:  D1 = "002003000000006051000050000086000020050300008009100006000000300600098002090405600"; break;
          case 14:  D1 = "109760050000080000000000300007059810040010000000000002000807100034000090900000000"; break;
          case 15:  D1 = "300000040000010006804500000008006300030100680200007005600000100087000000020709503"; break;
          case 16:  D1 = "000970004000001906002508007400207000030000000007000608060054000800000000050060010"; break;
          case 17:  D1 = "000080000000039200000500719009360080080000400000400020700006300046002050000000090"; break;
          case 18:  D1 = "000000000500900300080030007000000200970008506000600030100089003060020700050000040"; break;
          case 19:  D1 = "000600290004900016000004300000000500200010009391700600000500000480000020107003000"; break;
          case 20:  D1 = "650000900700020000300000201010000008000503090007608003000750000009804070000090800"; break;
          case 21:  D1 = "010006000400000700380000000900170058108000600000400030704090002050004900800000005"; break;
          case 22:  D1 = "158030002092000834000000000400067018070003000900000400000000000005002000600870020"; break;
          case 23:  D1 = "009140000800000940060000052403500000200000096000001000000405070000612800005080000"; break;
          case 24:  D1 = "005000020803002500000001000400029081090040600300008070900003000000000000060000904"; break;
          case 25:  D1 = "000000390001000008006309701000000050000090000104005930030401502000067000000030080"; break;
          case 26:  D1 = "600700000905604070087000040060203000001000030000000519100000000358060021000038000"; break;
          case 27:  D1 = "001080000000006000900300040000000052007000900000524600200408001008079006300000200"; break;
          case 28:  D1 = "007003040006007000000009680350000700410025000000000200000900160600000509500010000"; break;
          case 29:  D1 = "690000050000060009708000010200001000007302000000000095004000020002004001001005036"; break;
          case 30:  D1 = "008571000000080000060040002003005060200800500000160049000000000080000635001300700"; break;
          case 31:  D1 = "000036070007000008000004009000001000400000063351000000004807021030000080900000006"; break;
          case 32:  D1 = "800090025000006001050000030000027108000030040000600500040203000095400080020050600"; break;
          case 33:  D1 = "650020408100007000300600000000000003005000010000270045000003900709000000002050860"; break;
          case 34:  D1 = "000008000000053102090000430900080040026700080000040710000060000008000005600200000"; break;
          case 35:  D1 = "006304000087690000000000004703000900000000010010580030308002076000000020040030001"; break;
          case 36:  D1 = "093000080280004000600031000900206004030000050000050001008042300000008406100300000"; break;
          case 37:  D1 = "200090000000060904600701500400000000008310700903000001000200000000050307040003609"; break;
          case 38:  D1 = "009001800000300010040000072080012007000605000000090008600000005070000600105000390"; break;
          case 39:  D1 = "001400003307500060020003004005000090709030208200100040000700030980000000100008000"; break;
          case 40:  D1 = "078000400001500030030700009009003070000009200300005806000000008010084000025001300"; break;
          case 41:  D1 = "800037000060001070002060150409600030000000000507000004000020900006000403080000021"; break;
          case 42:  D1 = "308006009000000003600050800000461020000002600000800000800009007027040000003520010"; break;
          case 43:  D1 = "103000000045700089009060301500084000010000040000300700060000090000201000080050100"; break;
          case 44:  D1 = "000190607000000900000604000000050060003700020240000000000020009080306070734500000"; break;
          case 45:  D1 = "600030000000470009840050601000002035000780000021000000080000040907000010100000702"; break;
          case 46:  D1 = "002000000060900000003000650107204008028000003000010000001005030230000000900800001"; break;
          case 47:  D1 = "000000300100608407004007001000000002540000009800134600409700000000001000078020000"; break;
          case 48:  D1 = "040000201030094050000007009000150087001000000000048003890000700000580090005300100"; break;
          case 49:  D1 = "930000001002090060000000000000100407000860000010900050000002700006701940200600010"; break;
          case 50:  D1 = "010005300003080025007023100900200000030600409400000067004050800000090003000000040"; break;
// da qui Hard
          case 51:  D1 = "280007003050900000000000007030200065000001000070030100009008020000600700008004630"; break;
          case 52:  D1 = "000002305000083000040000700000700930050600000900000100000008000070050290800010000"; break;
          case 53:  D1 = "003000005000720004020400000900260000000001760000987000005000002000800600030600908"; break;
          case 54:  D1 = "070095000000000930001003000000004200400809010060000000315000640790006580000000300"; break;
          case 55:  D1 = "020000074001203000008090015000000091002700000090806040005000900000000000400000063"; break;
          case 56:  D1 = "094020070000000050000489030030000000020006000006500900002100000000008100050002096"; break;
          case 57:  D1 = "000403020000900600003070000006000004007006180030000005700050091000000000200894000"; break;
          case 58:  D1 = "040000000000700000000020301002400010000002060070003004060840079001000000000037800"; break;
          case 59:  D1 = "400000006800000050000000380000700940002015000010800600070000000103004009000001504"; break;
          case 60:  D1 = "006500003000902000009700080000070420000100000200304006607000015900000000084000000"; break;
          case 61:  D1 = "000095700000800000002000400300006005100003200907000000500071090000000000760050008"; break;
          case 62:  D1 = "007800300904000001000070900020051006001000000500700000010905400280000000000020007"; break;
          case 63:  D1 = "000050000000400002100000030708000053002800400003090700500010080004020310000600240"; break;
          case 64:  D1 = "001207000000005100400030092907100000060009030000000000072000009000000086500003000"; break;
          case 65:  D1 = "040000206038000000000007940000060000600503080100009300000072000004000017005000600"; break;
          case 66:  D1 = "000053000000900000129080430830010200076800000000000000000009000608035010010000300"; break;
          case 67:  D1 = "006005700095700800000000000074010008060000005050280007000400910030000600000103000"; break;
          case 68:  D1 = "000000000508009000006000003040000800000300041020790000004060900000130050600000000"; break;
          case 69:  D1 = "801000000036000000005020700490005000000300008700090200000004607000850000000000080"; break;
          case 70:  D1 = "435000009000000020000600300010002030020100070360700008090080000608000000000065000"; break;
          case 71:  D1 = "700089001000000060000020000001600070000000056020008000006700340503000087100000000"; break;
          case 72:  D1 = "000000240000000056007001000000367000000000010340080000091003005005000609204800000"; break;
          case 73:  D1 = "000000100000080000000350402005017004008000200090000070800000000260005009009400080"; break;
          case 74:  D1 = "060000300000090015001030470050000030009000080000200600030104000008709000170300060"; break;
          case 75:  D1 = "000000030700000002600000140520600000800010070000400000040009007000000810090102000"; break;
          case 76:  D1 = "000000610005807400000040000006000000097000030000020100310900050000080000900005040"; break;
          case 77:  D1 = "000050048400000710050100009010040800008600000070205004000820000037400000000001900"; break;
          case 78:  D1 = "000701000030050420008000000500000007709000060000000304000072000004900002060800905"; break;
          case 79:  D1 = "030200000000500009600010005080000010009000002000020300500700080018406000060030104"; break;
          case 80:  D1 = "000000003407010000000056090900400007500008030100200008000040500000071000004000002"; break;


          case 81:  D1 = "000002090700060000085000070500000900009000084004001000000296030400000050000030200"; break;
          case 82:  D1 = "007020080000307004010000900005000003000006508004000090400700025020864000000030000"; break;
          case 83:  D1 = "000050400500000030400007000000420070007008020003000009080200690005080000700000501"; break;
          case 84:  D1 = "006000230030000070500060900009000300008400005000028040000500000010090607060170000"; break;
          case 85:  D1 = "005200007090807004004000069070000000508000000000510000089070000300000040000120050"; break;
          case 86:  D1 = "500080760000090000200003001000001000000600800000420093300000002040008970007000400"; break;
          case 87:  D1 = "070000005590020004000000100007003018008000600000000000000040000040069802980010070"; break;
          case 88:  D1 = "009000008670059000003060071000507000008000650000000800400000200080092005090000380"; break;
          case 89:  D1 = "000200900070005000348000020000410500004600090000059080000008304000000060053060809"; break;
          case 90:  D1 = "400000605009080000000007204020700000000056000094300050000004000806000300010008000"; break;
          case 91:  D1 = "000060010200000000000140800000802000400650003700000000080000005007001009000985002"; break;
          case 92:  D1 = "000500000700000000980004070870030000200008501000100000060810040000000063000040900"; break;
          case 93:  D1 = "000019760000070300009000000600000091700000003204800670000740000040200000000000908"; break;
          case 94:  D1 = "050000030800006040000300056000170200720030009000040500004200001009004000300010000"; break;
          case 95:  D1 = "000007300000903000600000085501002000000700000000806002025300700103000000070500008"; break;
          case 96:  D1 = "090020000000000100300000050009700000530009000001800907600000030000000048040016700"; break;
          case 97:  D1 = "610005702700900006000000100000504601150200304004300020000000000403000000005603000"; break;
          case 98:  D1 = "000000030006080150540000000000000400000030002000001060001405600680900200300000049"; break;
          case 99:  D1 = "600008000003000000850100000070000000009017000000900004200503001910800062006000750"; break;
          case 100: D1 = "000602003000000000004001020760400105100006080408005000002000490000200300071090000"; break;
        }

      return D1;
    }





}




